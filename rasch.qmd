---
title: "Rasch analysis"
title-block-banner: "#009ca6"
title-block-banner-color: "#FFFFFF"
author: 
  name: Magnus Johansson
  affiliation: RISE Research Institutes of Sweden
  affiliation-url: https://www.ri.se/en/kbm
  orcid: 0000-0003-1669-592X
date: last-modified
date-format: iso
always_allow_html: true
format: html
execute:
  echo: true
  warning: false
  message: false
  cache: false
editor_options: 
  markdown: 
    wrap: 72
  chunk_output_type: console
bibliography: 
  - references.bib
  - grateful-refs.bib
---

```{r}
#| label: setup

# one package below requires that you use devtools to install them manually:
# first install devtools by
# install.packages('devtools')

library(RISEkbmRasch) # devtools::install_github("pgmj/RISEkbmRasch")
library(grateful)
library(ggrepel)
library(car)
library(kableExtra)
library(readxl)
library(tidyverse)
library(eRm)
library(mirt)
library(psych)
library(psychotree)
library(matrixStats)
library(reshape)
library(knitr)
library(patchwork)
library(formattable) 
library(glue)

### optional libraries
#library(TAM)
#library(skimr)

### some commands exist in multiple packages, here we define preferred ones that are frequently used
select <- dplyr::select
count <- dplyr::count
recode <- car::recode
rename <- dplyr::rename

source("RISE_theme.R")
```


```{r}
### import data
# df <- read_excel("data/MasterFile_CLEAN.xlsx") %>% 
#   rename(gender = WhatisyourgenderSelectedChoice,
#          age = Whatisyourage,
#          citizenship = WhatisyourcitizenshipSelectedChoice) %>% 
#   select(gender,age,citizenship,starts_with("mhc")) %>% 
#   select(-starts_with("mhc_"))
# 
# ### Load item information
# # make sure that variable names in df match with itemlabels$itemnr
# itemlabels <- read_excel("data/itemlabels_MHC_SF.xlsx") %>% 
#   mutate(item = str_squish(item))
# 
# #---- Create DIF variables----
#   
# # DIF variables into vectors, recoded as factors since DIF functions need this
# dif.gender <- as.factor(df$gender)
# dif.age <- df$age
# dif.citizenship <- as.factor(df$citizenship)
# # then remove them from dataframe, since we need a dataframe with only item data for the Rasch analyses
# df$gender <- NULL
# df$age <- NULL
# df$citizenship <- NULL

```

```{r}
### other, bigger dataset from [@echeverrÃ­a2017]
### read file
df.all <- read_excel("data/data_sMHCSF_Echeverria2017.xlsx")
df <- df.all
### create dif variables
dif.sex <- factor(df$Sex)
df$Sex <- NULL

### Load item information
# make sure that variable names in df match with itemlabels$itemnr
itemlabels <- read_excel("data/itemlabels_MHC_SF.xlsx") %>% 
  mutate(item = str_squish(item))

names(df) <- itemlabels$itemnr

df <- df %>%
  mutate(across(everything(), ~ car::recode(.x,"'Never'=0;'1 or 2 times a month'=1;'About 1 time a week'=2;'About 2 or 3 times a week'=3;'Almost daily'=4;'Daily'=5", as.factor = FALSE)))

```

## Rasch analysis 1

The eRm package, which uses Conditional Maximum Likelihood (CML)
estimation, will be used primarily. For this analysis of polytomous data, the Partial
Credit Model will be used.

```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df, fontsize = 13)
```

::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df, 250, 24)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df)
```
### Residual correlations
```{r}
RIresidcorr(df, cutoff = 0.2)
```
### 1st contrast loadings
```{r}
RIloadLoc(df)
```
### Response categories (ICC)
```{r}
mirt(df, model=1, itemtype='Rasch', verbose = FALSE) %>% 
  plot(type="trace", as.table = TRUE, 
       theta_lim = c(-6,6))
```

### Targeting
```{r}
#| fig-height: 7
# increase fig-height above as needed, if you have many items
RItargeting(df)
```
### Item hierarchy
```{r}
#| fig-height: 7
RIitemHierarchy(df)
```
:::

Multidimensionality is indicated by PCA of residuals and residual correlations. Also, item 5 shows high item fit (above MSQ 1.3). Loadings on first residual contrast indicates that items 5-8 form a separate cluster, which is largely in agreement with the residual correlation matrix (items 6-8 are correlated, but not item 5). Items 1-3 are also correlated.

All items have disordered thresholds except 1 and 2, and both of those have very small distances between thresholds.

We'll remove one item from each cluster, based on the level of correlations, which results in the removal of items 3 and 8.

Also, we'll merge the response categories:

- 'About 1 time a week', 
- 'About 2 or 3 times a week', 

## Rasch 2

```{r}
removed.items <- c("mhc3","mhc8")

df2 <- df %>% 
  select(!any_of(removed.items)) %>% 
  mutate(across(everything(), ~ car::recode(.x,"3=2;4=3;5=4")))
RIbarstack(df2)
```


```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df2, fontsize = 13)
```

::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df2, 250, 24)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df2)
```
### Residual correlations
```{r}
RIresidcorr(df2, cutoff = 0.2)
```
### 1st contrast loadings
```{r}
RIloadLoc(df2)
```
### Response categories (ICC)
```{r}
mirt(df2, model=1, itemtype='Rasch', verbose = FALSE) %>% 
  plot(type="trace", as.table = TRUE, 
       theta_lim = c(-6,6))
```

### Targeting
```{r}
#| fig-height: 7
# increase fig-height above as needed, if you have many items
RItargeting(df2)
```
### Item hierarchy
```{r}
#| fig-height: 7
RIitemHierarchy(df2)
```
:::

Item 5 still has high levels of item fit, and disordered response categories. Most items have less issues with disordered response categories, but the two lowest are very close together for several items.

Some residual correlations remain problematic, particularly between items 6 and 7, and the PCA of residuals is above 2.0.

We'll remove items 5 and 6 (the latter due to issues with disordered response categories compared to item 7),

## Rasch 3

```{r}
removed.items <- c("mhc3","mhc8","mhc5","mhc6")

df2 <- df %>% 
  select(!any_of(removed.items)) %>% 
  mutate(across(everything(), ~ car::recode(.x,"3=2;4=3;5=4")))
#RIbarstack(df2)
```


```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df2, fontsize = 13)
```

::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df2, 250, 24)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df2)
```
### Residual correlations
```{r}
RIresidcorr(df2, cutoff = 0.2)
```
### 1st contrast loadings
```{r}
RIloadLoc(df2)
```
### Response categories (ICC)
```{r}
mirt(df2, model=1, itemtype='Rasch', verbose = FALSE) %>% 
  plot(type="trace", as.table = TRUE, 
       theta_lim = c(-6,6))
```

### Targeting
```{r}
#| fig-height: 7
# increase fig-height above as needed, if you have many items
RItargeting(df2)
```
### Item hierarchy
```{r}
#| fig-height: 7
RIitemHierarchy(df2)
```
:::

PCA is now under 2.0. The residual correlation between items 1 and 2 remains at a relatively high level (we'll remove item 2, since item 1 has better targeting). Item 7 has high item fit and loadings/locations plot also shows it being deviant in terms of loading.

Item 4 has disordered response categories for the two lowest.

Item 14 is somewhat low in item fit.

## Rasch 4

```{r}
#| code-fold: false
removed.items <- c("mhc3","mhc8","mhc5","mhc6","mhc7","mhc2")

df2 <- df %>% 
  select(!any_of(removed.items)) %>% 
  mutate(across(everything(), ~ car::recode(.x,"3=2;4=3;5=4"))) %>% 
  mutate(mhc4 = car::recode(mhc4,"1=0;2=1;3=2;4=3"))
RIbarstack(df2)
```


```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df2, fontsize = 13)
```

::: panel-tabset
### Item fit
```{r}
RIitemfitPCM2(df2, 250, 24)
```
### PCA
```{r}
#| tbl-cap: "PCA of Rasch model residuals"
RIpcmPCA(df2)
```
### Residual correlations
```{r}
RIresidcorr(df2, cutoff = 0.2)
```
### 1st contrast loadings
```{r}
RIloadLoc(df2)
```
### Response categories (ICC)
```{r}
mirt(df2, model=1, itemtype='Rasch', verbose = FALSE) %>% 
  plot(type="trace", as.table = TRUE, 
       theta_lim = c(-6,6))
```

### Targeting
```{r}
#| fig-height: 7
# increase fig-height above as needed, if you have many items
RItargeting(df2)
```
### Item hierarchy
```{r}
#| fig-height: 7
RIitemHierarchy(df2)
```
:::

## DIF-analysis

### Gender
```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df2, fontsize = 13)
```

::: panel-tabset
#### Table
```{r}
RIdifTable(df2, dif.sex)
```
#### Locations
```{r}
RIdifFigure(df2, dif.sex)
```
#### Thresholds
```{r}
RIdifFigThresh(df2, dif.sex)
```
:::

## Reliability
```{r}
RItif(df2)
```

## Person infit ZSTD
```{r}
RIpfit(df2)
```

## Item parameters
```{r}
RIitemparams(df)
```

## Transformation table

```{r}
RIscoreSE(df2, score_range = c(-4,5))
```

## Ordinal/interval figure

```{r}
RIscoreSE(df2, score_range = c(-4,5),
          output = "figure")
```


## Software used
```{r}
pkgs <- cite_packages(cite.tidyverse = TRUE, 
                      output = "table",
                      bib.file = "grateful-refs.bib",
                      include.RStudio = TRUE,
                      out.dir = getwd())
formattable(pkgs, 
            table.attr = 'class=\"table table-striped\" style="font-size: 15px; font-family: Lato; width: 80%"')

```

## References
