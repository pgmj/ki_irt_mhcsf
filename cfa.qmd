---
title: "Confirmatory factor analysis"
title-block-banner: "#009ca6"
title-block-banner-color: "#FFFFFF"
author: 
  name: Magnus Johansson
  affiliation: RISE Research Institutes of Sweden
  affiliation-url: https://www.ri.se/en/kbm
  orcid: 0000-0003-1669-592X
date: last-modified
date-format: iso
always_allow_html: true
format: html
execute:
  echo: true
  warning: false
  message: false
  cache: false
editor_options: 
  markdown: 
    wrap: 72
  chunk_output_type: console
bibliography: 
  - references.bib
  - grateful-refs.bib
---

```{r}
#| label: setup

# one package below requires that you use devtools to install them manually:
# first install devtools by
# install.packages('devtools')

library(RISEkbmRasch) # devtools::install_github("pgmj/RISEkbmRasch")
library(lavaan)
library(lavaanPlot)
library(lavaanExtra)
library(readxl)
library(grateful)


### optional libraries
#library(TAM)
#library(skimr)

### some commands exist in multiple packages, here we define preferred ones that are frequently used
select <- dplyr::select
count <- dplyr::count
recode <- car::recode
rename <- dplyr::rename

source("RISE_theme.R")
```

```{r}
### import data
# df <- read_excel("data/MasterFile_CLEAN.xlsx") %>% 
#   rename(gender = WhatisyourgenderSelectedChoice,
#          age = Whatisyourage,
#          citizenship = WhatisyourcitizenshipSelectedChoice) %>% 
#   select(gender,age,citizenship,starts_with("mhc")) %>% 
#   select(-starts_with("mhc_"))
# 
# ### Load item information
# # make sure that variable names in df match with itemlabels$itemnr
# itemlabels <- read_excel("data/itemlabels_MHC_SF.xlsx") %>% 
#   mutate(item = str_squish(item))
# 
# #---- Create DIF variables----
#   
# # DIF variables into vectors, recoded as factors since DIF functions need this
# dif.gender <- as.factor(df$gender)
# dif.age <- df$age
# dif.citizenship <- as.factor(df$citizenship)
# # then remove them from dataframe, since we need a dataframe with only item data for the Rasch analyses
# df$gender <- NULL
# df$age <- NULL
# df$citizenship <- NULL

```

```{r}
### other, bigger dataset from [@echeverrÃ­a2017]
### read file
df.all <- read_excel("data/data_sMHCSF_Echeverria2017.xlsx")
df <- df.all
### create dif variables
dif.sex <- factor(df$Sex)
df$Sex <- NULL

### Load item information
# make sure that variable names in df match with itemlabels$itemnr
itemlabels <- read_excel("data/itemlabels_MHC_SF.xlsx") %>% 
  mutate(item = str_squish(item))

names(df) <- itemlabels$itemnr

df <- df %>%
  mutate(across(everything(), ~ car::recode(.x,"'Never'=0;'1 or 2 times a month'=1;'About 1 time a week'=2;'About 2 or 3 times a week'=3;'Almost daily'=4;'Daily'=5", as.factor = FALSE)))

```

## Confirmatory factor analysis

Since the intended use of this scale is as a unidimensional scale, this is what we will primarily investigate.

The WLSMV estimator will be used, since we have ordinal data [@li2016; @sellbom2019].

We'll use the `lavaanExtra` package to make things easier <https://lavaanextra.remi-theriault.com/>

Four fit indices will be in focus, apart from factor loadings.

-   RMSEA (should be below 0.06, but at least 0.10)
-   SRMR (below 0.08)
-   CFI and TLI (above 0.90 or ideally 0.95 [@hu1999].

Robust values for RMSEA och CFI/TLI are used, see <https://lavaan.ugent.be/history/dot5.html#version-0.5-21>, och a "scaled" value for chi2.

Recent developments in CFA propose that the old Hu & Bentler (1999) cutoff values should be replaced with dynamically set cutoffs [@mcneish2021]. They provide an online app: <https://dynamicfit.app/>

## CFA 1

```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df, fontsize = 13)
```

::: panel-tabset
### Define model

```{r}
# Define latent variables
latent <- list(
  mhc = names(df)
)

# Write the model, and check it
cfa.model <- write_lavaan(latent = latent)
cat(cfa.model)
```

### Fit model

```{r}
fit.cfa <- cfa(model = cfa.model, 
               data = df,
               estimator = "WLSMV",
               ordered = TRUE,
               rotation = "oblimin")
summary(fit.cfa)
```

### Model fit

```{r}
# create table with model fit metrics
# define fit metrics of interest

fit_metrics_robust <- c("chisq.scaled", "df", "pvalue.scaled", 
                         "cfi.robust", "tli.robust", "rmsea.robust", 
                        "rmsea.ci.lower.robust","rmsea.ci.upper.robust",
                        "srmr")

mfit1 <- 
  fitmeasures(fit.cfa, fit_metrics_robust) %>% 
  rbind() %>% 
  as.data.frame() %>% 
  mutate(across(where(is.numeric),~ round(.x, 3))) %>%
  rename(Chi2 = chisq.scaled,
         p = pvalue.scaled,
         CFI = cfi.robust,
         TLI = tli.robust,
         RMSEA = rmsea.robust,
         CI_low = rmsea.ci.lower.robust,
         CI_high = rmsea.ci.upper.robust,
         SRMR = srmr) %>% 
  add_column(Model = "Full 14 items", .before = "Chi2")

mfit1 %>% 
  kbl_rise()
```

### Loadings plot

```{r}
lavaanPlot(model = fit.cfa, 
           coefs = T, stand = T, covs = F,
           node_options = list(fontname = "Helvetica"), 
           edge_options = list(color = "grey"),
           graph_options = list(rankdir = "TD"))
```

### Residual correlations

```{r}
modificationIndices(fit.cfa,
                    standardized = T) %>% 
  as.data.frame(row.names = NULL) %>% 
  filter(mi > 30,
         op == "~~") %>% 
  arrange(desc(mi)) %>% 
  mutate(across(where(is.numeric),~ round(.x, 3))) %>%
  kbl_rise(fontsize = 14, tbl_width = 75)
```
:::

Model fit is not good. Residual correlations are the likely cause. Items 3 and 6 are both in the top 4 MI with 2 correlations each, and we'll remove those two and revise the model.

## CFA 2

```{r}
removed.items <- c("mhc3","mhc6")
df2 <- df %>% 
  select(!any_of(removed.items))

```

```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df2, fontsize = 13)
```

::: panel-tabset
```{r}
# Define latent variables
latent2 <- list(
  mhc = names(df2)
)

# Write the model, and check it
cfa.model2 <- write_lavaan(latent = latent2)
```

### Fit model

```{r}
fit.cfa2 <- cfa(model = cfa.model2, 
                data = df2,
                estimator = "WLSMV",
                ordered = TRUE,
                rotation = "oblimin")
summary(fit.cfa2)
```

### Model fit

```{r}
# create table with model fit metrics

mfit2 <- 
  fitmeasures(fit.cfa2, fit_metrics_robust) %>% 
  rbind() %>% 
  as.data.frame() %>% 
  mutate(across(where(is.numeric),~ round(.x, 3))) %>%
  rename(Chi2 = chisq.scaled,
         p = pvalue.scaled,
         CFI = cfi.robust,
         TLI = tli.robust,
         RMSEA = rmsea.robust,
         CI_low = rmsea.ci.lower.robust,
         CI_high = rmsea.ci.upper.robust,
         SRMR = srmr)  %>% 
  add_column(Model = "3 and 6 removed", .before = "Chi2")

rbind(mfit1,mfit2) %>%
  remove_rownames() %>% 
  kbl_rise()

```

### Loadings plot

```{r}
lavaanPlot(model = fit.cfa2, 
           coefs = T, stand = T, covs = F,
           node_options = list(fontname = "Helvetica"), 
           edge_options = list(color = "grey"),
           graph_options = list(rankdir = "TD"))
```

### Residual correlations

```{r}
modificationIndices(fit.cfa2,
                    standardized = T) %>% 
  as.data.frame(row.names = NULL) %>% 
  filter(mi > 30,
         op == "~~") %>% 
  arrange(desc(mi)) %>% 
  mutate(across(where(is.numeric),~ round(.x, 3))) %>%
  kbl_rise(fontsize = 14, tbl_width = 75)
```
:::

Better fit, but still not within acceptable metrics. Residual correlations remain problematic, with pairs 1 & 2 and 7 & 8 having the biggest issues. Leaning on factor loadings as a selection criterion, we'll remove the item with lower loading.

## CFA 3

```{r}
removed.items <- c("mhc3","mhc6","mhc1","mhc8")
df2 <- df %>% 
  select(!any_of(removed.items))

```

```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df2, fontsize = 13)
```

::: panel-tabset
```{r}
# Define latent variables
latent3 <- list(
  mhc = names(df2)
)

# Write the model, and check it
cfa.model3 <- write_lavaan(latent = latent3)
```

### Fit model

```{r}
fit.cfa3 <- cfa(model = cfa.model3, 
                data = df2,
                estimator = "WLSMV",
                ordered = TRUE,
                rotation = "oblimin")
summary(fit.cfa3)
```

### Model fit

```{r}
# create table with model fit metrics

mfit3 <- 
  fitmeasures(fit.cfa3, fit_metrics_robust) %>% 
  rbind() %>% 
  as.data.frame() %>% 
  mutate(across(where(is.numeric),~ round(.x, 3))) %>%
  rename(Chi2 = chisq.scaled,
         p = pvalue.scaled,
         CFI = cfi.robust,
         TLI = tli.robust,
         RMSEA = rmsea.robust,
         CI_low = rmsea.ci.lower.robust,
         CI_high = rmsea.ci.upper.robust,
         SRMR = srmr)  %>% 
  add_column(Model = "3,6,1,8 removed", .before = "Chi2")

rbind(mfit1,mfit2,mfit3) %>%
  remove_rownames() %>% 
  kbl_rise()

```

### Loadings plot

```{r}
lavaanPlot(model = fit.cfa3, 
           coefs = T, stand = T, covs = F,
           node_options = list(fontname = "Helvetica"), 
           edge_options = list(color = "grey"),
           graph_options = list(rankdir = "TD"))
```

### Residual correlations

```{r}
modificationIndices(fit.cfa3,
                    standardized = T) %>% 
  as.data.frame(row.names = NULL) %>% 
  filter(mi > 5,
         op == "~~") %>% 
  arrange(desc(mi)) %>% 
  mutate(across(where(is.numeric),~ round(.x, 3))) %>%
  kbl_rise(fontsize = 14, tbl_width = 75)
```
:::

RMSEA still not quite there, but other metrics look pretty good. Residual correlation between items 4 and 5 is high, so we'll remove item 5 (lower factor loading than item 4).

## CFA 4

```{r}
removed.items <- c("mhc3","mhc6","mhc1","mhc8","mhc5")
df2 <- df %>% 
  select(!any_of(removed.items))

```

```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df2, fontsize = 13)
```

::: panel-tabset
```{r}
# Define latent variables
latent4 <- list(
  mhc = names(df2)
)

# Write the model, and check it
cfa.model4 <- write_lavaan(latent = latent4)
```

### Fit model

```{r}
fit.cfa4 <- cfa(model = cfa.model4, 
                data = df2,
                estimator = "WLSMV",
                ordered = TRUE,
                rotation = "oblimin")
summary(fit.cfa4)
```

### Model fit

```{r}
# create table with model fit metrics

mfit4 <- 
  fitmeasures(fit.cfa4, fit_metrics_robust) %>% 
  rbind() %>% 
  as.data.frame() %>% 
  mutate(across(where(is.numeric),~ round(.x, 3))) %>%
  rename(Chi2 = chisq.scaled,
         p = pvalue.scaled,
         CFI = cfi.robust,
         TLI = tli.robust,
         RMSEA = rmsea.robust,
         CI_low = rmsea.ci.lower.robust,
         CI_high = rmsea.ci.upper.robust,
         SRMR = srmr)  %>% 
  add_column(Model = "3,6,1,8,5 removed", .before = "Chi2")

rbind(mfit1,mfit2,mfit3,mfit4) %>%
  remove_rownames() %>% 
  kbl_rise()

```

### Loadings plot

```{r}
lavaanPlot(model = fit.cfa4, 
           coefs = T, stand = T, covs = F,
           node_options = list(fontname = "Helvetica"), 
           edge_options = list(color = "grey"),
           graph_options = list(rankdir = "TD"))
```

### Residual correlations

```{r}
modificationIndices(fit.cfa4,
                    standardized = T) %>% 
  as.data.frame(row.names = NULL) %>% 
  filter(mi > 5,
         op == "~~") %>% 
  arrange(desc(mi)) %>% 
  mutate(across(where(is.numeric),~ round(.x, 3))) %>%
  kbl_rise(fontsize = 14, tbl_width = 75)
```
:::

All metrics are looking quite good except for RMSEA. It is acceptable but would preferrably be lower.

## Intercepts?

Let's have a look at the item intercepts.

```{r}
cfa.int4 <- 
  lavInspect(fit.cfa4, "wls.obs") %>% 
  as.data.frame() %>% 
  rownames_to_column("item_threshold") %>% 
  filter(!str_detect(item_threshold,"~~"))

names(cfa.int4)[2] <- "intercept"

cfa.int4 <- 
  cfa.int4 %>% 
  separate_wider_delim(item_threshold,
                       names = c("item","threshold"),
                       delim = "|")

cfa.int4 %>% 
  mutate(item = factor(item, rev(names(df2)))) %>% 
  ggplot(aes(y = item, x = intercept, color = threshold, group = item)) +
  geom_point(size = 3) +
  scale_color_viridis_d(end = 0.95)

```

Everything seems to be in order here. But then again, CFA assumes so.

## CFA based on Rasch

```{r}
removed.items <- c("mhc3","mhc8","mhc5","mhc6","mhc7","mhc2")

df4 <- df %>% 
  select(!any_of(removed.items)) %>% 
  mutate(across(everything(), ~ car::recode(.x,"3=2;4=3;5=4"))) %>% 
  mutate(mhc4 = car::recode(mhc4,"1=0;2=1;3=2;4=3"))
```

```{r}
#| column: margin
#| echo: false
RIlistItemsMargin(df4, fontsize = 13)
```

::: panel-tabset
### Fit model

```{r}
# Define latent variables
latent4 <- list(
  mhc = names(df4)
)

# Write the model, and check it
cfa.model4 <- write_lavaan(latent = latent4)

fit.cfa5 <- cfa(model = cfa.model4, 
                data = df4,
                estimator = "WLSMV",
                ordered = TRUE,
                rotation = "oblimin")
summary(fit.cfa5)
```

### Model fit

```{r}
# create table with model fit metrics

mfit5 <- 
  fitmeasures(fit.cfa5, fit_metrics_robust) %>% 
  rbind() %>% 
  as.data.frame() %>% 
  mutate(across(where(is.numeric),~ round(.x, 3))) %>%
  rename(Chi2 = chisq.scaled,
         p = pvalue.scaled,
         CFI = cfi.robust,
         TLI = tli.robust,
         RMSEA = rmsea.robust,
         CI_low = rmsea.ci.lower.robust,
         CI_high = rmsea.ci.upper.robust,
         SRMR = srmr)  %>% 
  add_column(Model = "Rasch based", .before = "Chi2")

rbind(mfit1,mfit2,mfit3,mfit4,mfit5) %>%
  remove_rownames() %>% 
  kbl_rise()

```

### Loadings plot

```{r}
lavaanPlot(model = fit.cfa5, 
           coefs = T, stand = T, covs = F,
           node_options = list(fontname = "Helvetica"), 
           edge_options = list(color = "grey"),
           graph_options = list(rankdir = "TD"))
```

### Residual correlations

```{r}
modificationIndices(fit.cfa5,
                    standardized = T) %>% 
  as.data.frame(row.names = NULL) %>% 
  filter(mi > 5,
         op == "~~") %>% 
  arrange(desc(mi)) %>% 
  mutate(across(where(is.numeric),~ round(.x, 3))) %>%
  kbl_rise(fontsize = 14, tbl_width = 75)
```
:::

## Software used

```{r}
pkgs <- cite_packages(cite.tidyverse = TRUE, 
                      output = "table",
                      bib.file = "grateful-refs.bib",
                      include.RStudio = TRUE,
                      out.dir = getwd())
formattable(pkgs, 
            table.attr = 'class=\"table table-striped\" style="font-size: 15px; font-family: Lato; width: 80%"')

```

## References
